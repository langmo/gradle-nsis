/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/custom_plugins.html
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
	id "com.gradle.plugin-publish" version "0.10.1"
    id 'java-gradle-plugin'
	//id 'maven-publish'
	id 'eclipse'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use JUnit test framework for unit tests
    testImplementation 'junit:junit:4.12'
}

group = 'com.github.langmo'
version = '0.1.0'
sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

apply plugin: 'java'
jar.archiveName = "${rootProject.name}.${jar.extension}"

jar.doFirst{
	manifest{
		def manif = "${projectDir}/src/main/resources/META-INF/MANIFEST.MF"
		if (new File(manif).exists()) {
			from file(manif)
		}
		else
		{
			attributes(
				'Class-Path'	 : configurations.compile.collect { it.getName() }.join(' ')
			)
		}
		attributes(
			'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
			'Build-Version'  : rootProject.version,
			'Created-By'     : "Gradle ${gradle.gradleVersion}",
			'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
			'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
		)
	}
}
/*
publishing {
    publications {
        gradlensis(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = 'mavenRepo'
            url = "file://${buildDir}/repo"
        }
    }
}*/
gradlePlugin {
  plugins {
    gradleNsisPlugin {
      id = 'com.github.langmo.gradlensis'
      implementationClass = 'com.github.langmo.gradlensis.GradleNsisPlugin'
    }
  }
}
pluginBundle {
  website = 'https://github.com/langmo/gradle-nsis'
  vcsUrl = 'https://github.com/langmo/gradle-nsis'
  description = 'Creates NSIS installers for Windows.'
  tags = ['NSIS', 'installer', 'windows', 'distribution']

  plugins {
    gradleNsisPlugin {
      displayName = 'NSIS installer plugin'
    }
  }
}