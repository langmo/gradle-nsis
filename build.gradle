/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/custom_plugins.html
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'
	id 'maven-publish'
	id 'eclipse'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use JUnit test framework for unit tests
    testImplementation 'junit:junit:4.12'
}

/*gradlePlugin {
    // Define the plugin
    plugins {
        gradlensis {
            id = 'com.github.langmo.gradle-nsis'
            implementationClass = 'com.github.langmo.gradlensis.GradleNsisPlugin'
        }
    }
}*/

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}



group = 'com.github.langmo'
version = '0.1.0'
sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

apply plugin: 'java'
jar.archiveName = "${rootProject.name}.${jar.extension}"

jar.doFirst{
	manifest{
		def manif = "${projectDir}/src/main/resources/META-INF/MANIFEST.MF"
		if (new File(manif).exists()) {
			from file(manif)
		}
		else
		{
			attributes(
				'Class-Path'	 : configurations.compile.collect { it.getName() }.join(' ')
			)
		}
		attributes(
			'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
			'Build-Version'  : rootProject.version,
			'Created-By'     : "Gradle ${gradle.gradleVersion}",
			'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
			'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
		)
	}
}

publishing {
    publications {
        gradlensis(MavenPublication) {
            from components.java
			/*descriptor {
                license {
                    name = 'The Apache License, Version 2.0'
                    url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
                author {
                    name = 'Moritz Lang'
                    url = 'https://langmo.github.io/'
                }
                description {
                    text = 'A gradle plugin to run NSIS installer.'
                    homepage = 'https://github.com/langmo/gradle-nsis'
                }
            }*/
        }
    }

    repositories {
        maven {
            name = 'mavenRepo'
            url = "file://${buildDir}/repo"
        }
    }
}